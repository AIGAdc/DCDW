/* 
Special thanks to Rachel Andrew:
https://rachelandrew.co.uk/css/cheatsheets/grid-fallbacks;
*/

/*.grid {
    display: flex;
    flex-wrap: wrap;
    align-items: start;
}
.grid>* {
    flex: 1;
}*/

.grid {
    display: grid;
    grid-auto-flow: dense;
    grid-gap: 2rem;
    /* 
        Special thanks to this article from Evan Minto on Intrinsically Responsive CSS Grid: http://evanminto.com/blog/intrinsically-responsive-css-grid-minmax-min/ 
    */
    margin: 0;
    padding: 0;
}
.grid__1-column, .grid__2-column, .grid__3-column, .grid__3-column .column-1, .grid__3-column .column-2, .grid__3-column .column-3 .grid__4-column {
    grid-template-columns: 1fr;
}
@media screen and (min-width: 767px) {
    .grid--items-center {
        align-items: center;
    }
    .grid__1-column, .grid__2-column, .grid__3-column, .grid__4-column {
        grid-template-columns: repeat(2, 1fr);
    }
}
@media screen and (min-width: 1023px) {
    .grid__2-column {
        grid-template-columns: repeat(2, 1fr);
    }
    .grid__3-column {
        grid-template-columns: repeat(3, 1fr);
    }
    .grid__3-column .column-1 {
        grid-column: span 1;
    }
    .grid__3-column .column-2 {
        grid-column: span 2;
    }
    .grid__3-column .column-3 {
        grid-column: span 3;
    }
    .grid__4-column {
        grid-template-columns: repeat(4, 1fr);
    }
}